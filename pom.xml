<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.cf.demo</groupId>
    <artifactId>spring-restdocs</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-restdocs</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.swagger2markup</groupId>
            <artifactId>swagger2markup</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <version>2.0.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.22</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--此插件生成ASCIIDOC-->
            <plugin>
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <!--此处端口一定要是当前项目启动所用的端口-->
                    <swaggerInput>http://localhost:8080/v2/api-docs</swaggerInput>
                    <!--生成多个文件-->
                    <!--<outputDir>src\docs\asciidocs</outputDir>-->
                    <!--合并为单个文件-->
                    <outputFile>./docs/asciidoc/all</outputFile>
                    <config>
                        <!-- 除了ASCIIDOC之外，还有MARKDOWN和CONFLUENCE_MARKUP可选 -->
                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
                    </config>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.6</version>
                <!-- https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-pdf -->
                <!--要生成pdf需引入asciidoctorj-pdf依赖-->
                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>1.5.0-alpha.16</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>./docs/asciidoc/all</sourceDirectory>
                    <sourceDocumentName>all.adoc</sourceDocumentName>
                    <!--<outputDirectory>./docs/asciidoc/pdf</outputDirectory>-->
                    <outputFile>./docs/asciidoc/pdf/all.pdf</outputFile>
                    <headerFooter>true</headerFooter>
                    <!--生成pdf-->
                    <backend>pdf</backend>
                    <doctype>book</doctype>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <attributes>
                        <!--菜单栏在左边-->
                        <toc>left</toc>
                        <!--多标题排列-->
                        <toclevels>3</toclevels>
                        <!--自动打数字序号-->
                        <!--<sectnums>true</sectnums>-->
                    </attributes>

                </configuration>
                <!--<goals>-->
                <!--<goal>process-asciidoc</goal>-->
                <!--</goals>-->
                <!--<executions>-->
                <!--<execution>-->
                <!--<id>output-pdf</id>-->
                <!--<phase>test</phase>-->
                <!--<goals>-->
                <!--<goal>process-asciidoc</goal>-->
                <!--</goals>-->
                <!--<configuration>-->
                <!--<backend>pdf</backend>-->
                <!--<outputDirectory>./docs/asciidoc/pdf</outputDirectory>-->
                <!--</configuration>-->
                <!--</execution>-->
                <!--</executions>-->
            </plugin>

            <!--通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5-->
            <!--<plugin>-->
            <!--<groupId>org.asciidoctor</groupId>-->
            <!--<artifactId>asciidoctor-maven-plugin</artifactId>-->
            <!--<version>1.5.6</version>-->
            <!--&lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
            <!--&lt;!&ndash;生成PDF&ndash;&gt;-->
            <!--<dependencies>-->
            <!--<dependency>-->
            <!--<groupId>org.asciidoctor</groupId>-->
            <!--<artifactId>asciidoctorj-pdf</artifactId>-->
            <!--<version>1.5.0-alpha.14</version>-->
            <!--</dependency>-->
            <!--&lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
            <!--<dependency>-->
            <!--<groupId>org.jruby</groupId>-->
            <!--<artifactId>jruby-complete</artifactId>-->
            <!--<version>1.7.21</version>-->
            <!--</dependency>-->
            <!--</dependencies>-->

            <!--&lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
            <!--&lt;!&ndash;文档生成配置&ndash;&gt;-->
            <!--<configuration>-->
            <!--<sourceDirectory>src/docs/asciidocs</sourceDirectory>-->
            <!--&lt;!&ndash;<sourceDocumentName>index.adoc</sourceDocumentName>&ndash;&gt;-->
            <!--<attributes>-->
            <!--<doctype>book</doctype>-->
            <!--&lt;!&ndash;菜单栏在左边&ndash;&gt;-->
            <!--<toc>left</toc>-->
            <!--&lt;!&ndash;多标题排列&ndash;&gt;-->
            <!--<toclevels>3</toclevels>-->
            <!--&lt;!&ndash;自动打数字序号&ndash;&gt;-->
            <!--<sectnums>true</sectnums>-->
            <!--<numbered></numbered>-->
            <!--<hardbreaks></hardbreaks>-->
            <!--<sectlinks></sectlinks>-->
            <!--<sectanchors></sectanchors>-->
            <!--&lt;!&ndash;<generated>target/zz</generated>&ndash;&gt;-->
            <!--</attributes>-->
            <!--</configuration>-->
            <!--&lt;!&ndash; Since each execution can only handle one backend, run-->
            <!--separate executions for each desired output type &ndash;&gt;-->
            <!--&lt;!&ndash;因为每次执行只能处理一个后端，所以对于每个想要的输出类型，都是独立分开执行&ndash;&gt;-->
            <!--<executions>-->
            <!--&lt;!&ndash;html5&ndash;&gt;-->
            <!--<execution>-->
            <!--<id>output-html</id>-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
            <!--<goal>process-asciidoc</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<backend>html5</backend>-->
            <!--<outputDirectory>src/docs/html</outputDirectory>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--&lt;!&ndash;pdf&ndash;&gt;-->
            <!--<execution>-->
            <!--<id>output-pdf</id>-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
            <!--<goal>process-asciidoc</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<backend>pdf</backend>-->
            <!--<outputDirectory>src/docs/pdf</outputDirectory>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <!--<build>-->
    <!--<plugins>-->
    <!--&lt;!&ndash;此插件生成ASCIIDOC&ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>io.github.swagger2markup</groupId>-->
    <!--<artifactId>swagger2markup-maven-plugin</artifactId>-->
    <!--<version>1.3.7</version>-->
    <!--<configuration>-->
    <!--&lt;!&ndash;此处端口一定要是当前项目启动所用的端口&ndash;&gt;-->
    <!--<swaggerInput>http://localhost:8080/v2/api-docs</swaggerInput>-->
    <!--<outputDir>E:\work\demo\coupon\src\docs\api\asciidocs2</outputDir>-->
    <!--<config>-->
    <!--&lt;!&ndash; 除了ASCIIDOC之外，还有MARKDOWN和CONFLUENCE_MARKUP可选 &ndash;&gt;-->
    <!--<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
    <!--</config>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--&lt;!&ndash;通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5&ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.asciidoctor</groupId>-->
    <!--<artifactId>asciidoctor-maven-plugin</artifactId>-->
    <!--<version>1.5.3</version>-->
    <!--&lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
    <!--&lt;!&ndash;生成PDF&ndash;&gt;-->
    <!--<dependencies>-->
    <!--<dependency>-->
    <!--<groupId>org.asciidoctor</groupId>-->
    <!--<artifactId>asciidoctorj-pdf</artifactId>-->
    <!--<version>1.5.0-alpha.14</version>-->
    <!--</dependency>-->
    <!--&lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
    <!--<dependency>-->
    <!--<groupId>org.jruby</groupId>-->
    <!--<artifactId>jruby-complete</artifactId>-->
    <!--<version>1.7.21</version>-->
    <!--</dependency>-->
    <!--</dependencies>-->

    <!--&lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
    <!--&lt;!&ndash;文档生成配置&ndash;&gt;-->
    <!--<configuration>-->
    <!--<sourceDirectory>src/docs/api/asciidocs2</sourceDirectory>-->
    <!--&lt;!&ndash;<sourceDocumentName>index.adoc</sourceDocumentName>&ndash;&gt;-->
    <!--<attributes>-->
    <!--<doctype>book</doctype>-->
    <!--<toc>left</toc>-->
    <!--<toclevels>3</toclevels>-->
    <!--<numbered></numbered>-->
    <!--<hardbreaks></hardbreaks>-->
    <!--<sectlinks></sectlinks>-->
    <!--<sectanchors></sectanchors>-->
    <!--&lt;!&ndash;<generated>target/zz</generated>&ndash;&gt;-->
    <!--</attributes>-->
    <!--</configuration>-->
    <!--&lt;!&ndash; Since each execution can only handle one backend, run-->
    <!--separate executions for each desired output type &ndash;&gt;-->
    <!--&lt;!&ndash;因为每次执行只能处理一个后端，所以对于每个想要的输出类型，都是独立分开执行&ndash;&gt;-->
    <!--<executions>-->
    <!--&lt;!&ndash;html5&ndash;&gt;-->
    <!--<execution>-->
    <!--<id>output-html</id>-->
    <!--<phase>test</phase>-->
    <!--<goals>-->
    <!--<goal>process-asciidoc</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--<backend>html5</backend>-->
    <!--<outputDirectory>src/docs/api/html2</outputDirectory>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--&lt;!&ndash;pdf&ndash;&gt;-->
    <!--<execution>-->
    <!--<id>output-pdf</id>-->
    <!--<phase>test</phase>-->
    <!--<goals>-->
    <!--<goal>process-asciidoc</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--<backend>pdf</backend>-->
    <!--<outputDirectory>src/docs/api/html2</outputDirectory>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--</executions>-->
    <!--</plugin>-->
    <!--&lt;!&ndash;<plugin>&ndash;&gt;-->
    <!--&lt;!&ndash;<groupId>org.asciidoctor</groupId>&ndash;&gt;-->
    <!--&lt;!&ndash;<artifactId>asciidoctor-maven-plugin</artifactId>&ndash;&gt;-->
    <!--&lt;!&ndash;<version>1.5.3</version>&ndash;&gt;-->
    <!--&lt;!&ndash;<executions>&ndash;&gt;-->
    <!--&lt;!&ndash;<execution>&ndash;&gt;-->
    <!--&lt;!&ndash;<id>generate-docs</id>&ndash;&gt;-->
    <!--&lt;!&ndash;<phase>prepare-package</phase>&ndash;&gt;-->
    <!--&lt;!&ndash;<goals>&ndash;&gt;-->
    <!--&lt;!&ndash;<goal>process-asciidoc</goal>&ndash;&gt;-->
    <!--&lt;!&ndash;</goals>&ndash;&gt;-->
    <!--&lt;!&ndash;<configuration>&ndash;&gt;-->
    <!--&lt;!&ndash;<backend>pdf</backend>&ndash;&gt;-->
    <!--&lt;!&ndash;<doctype>book</doctype>&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<attributes>&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<snippets>${project.build.directory}/generated-snippets</snippets>&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;</attributes>&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<sourceDirectory>E:\work\demo\coupon\src\docs\api\asciidocs2</sourceDirectory>&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<sourceDirectory>${project.build.directory}/snippets</sourceDirectory>&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<outputDirectory>E:\work\demo\coupon\src\docs\api\html2</outputDirectory>&ndash;&gt;-->
    <!--&lt;!&ndash;</configuration>&ndash;&gt;-->
    <!--&lt;!&ndash;</execution>&ndash;&gt;-->
    <!--&lt;!&ndash;</executions>&ndash;&gt;-->
    <!--&lt;!&ndash;<dependencies>&ndash;&gt;-->
    <!--&lt;!&ndash;<dependency>&ndash;&gt;-->
    <!--&lt;!&ndash;<groupId>org.springframework.restdocs</groupId>&ndash;&gt;-->
    <!--&lt;!&ndash;<artifactId>spring-restdocs-asciidoctor</artifactId>&ndash;&gt;-->
    <!--&lt;!&ndash;<version>1.2.6.RELEASE</version>&ndash;&gt;-->
    <!--&lt;!&ndash;</dependency>&ndash;&gt;-->
    <!--&lt;!&ndash;</dependencies>&ndash;&gt;-->
    <!--&lt;!&ndash;</plugin>&ndash;&gt;-->
    <!--&lt;!&ndash;<plugin>&ndash;&gt;-->
    <!--&lt;!&ndash;<artifactId>maven-resources-plugin</artifactId>&ndash;&gt;-->
    <!--&lt;!&ndash;<version>2.7</version>&ndash;&gt;-->
    <!--&lt;!&ndash;<executions>&ndash;&gt;-->
    <!--&lt;!&ndash;<execution>&ndash;&gt;-->
    <!--&lt;!&ndash;<id>copy-resources</id>&ndash;&gt;-->
    <!--&lt;!&ndash;<phase>prepare-package</phase>&ndash;&gt;-->
    <!--&lt;!&ndash;<goals>&ndash;&gt;-->
    <!--&lt;!&ndash;<goal>copy-resources</goal>&ndash;&gt;-->
    <!--&lt;!&ndash;</goals>&ndash;&gt;-->
    <!--&lt;!&ndash;<configuration>&ndash;&gt;-->
    <!--&lt;!&ndash;<outputDirectory>&ndash;&gt;-->
    <!--&lt;!&ndash;${project.build.outputDirectory}/static/docs&ndash;&gt;-->
    <!--&lt;!&ndash;</outputDirectory>&ndash;&gt;-->
    <!--&lt;!&ndash;<resources>&ndash;&gt;-->
    <!--&lt;!&ndash;<resource>&ndash;&gt;-->
    <!--&lt;!&ndash;<directory>&ndash;&gt;-->
    <!--&lt;!&ndash;${project.build.directory}/generated-docs&ndash;&gt;-->
    <!--&lt;!&ndash;</directory>&ndash;&gt;-->
    <!--&lt;!&ndash;</resource>&ndash;&gt;-->
    <!--&lt;!&ndash;</resources>&ndash;&gt;-->
    <!--&lt;!&ndash;</configuration>&ndash;&gt;-->
    <!--&lt;!&ndash;</execution>&ndash;&gt;-->
    <!--&lt;!&ndash;</executions>&ndash;&gt;-->
    <!--&lt;!&ndash;</plugin>&ndash;&gt;-->
    <!--&lt;!&ndash; 打包成可执行jar,防止中文乱码，必须要下面这一个插件  &ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-compiler-plugin</artifactId>-->
    <!--<configuration>-->
    <!--<source>1.8</source>-->
    <!--<target>1.8</target>-->
    <!--<encoding>utf-8</encoding>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-surefire-plugin</artifactId>-->
    <!--<configuration>-->
    <!--<argLine>-Dfile.encoding=UTF-8</argLine>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--<plugin>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--<configuration>-->
    <!--</configuration>-->
    <!--</plugin>-->
    <!--</plugins>-->
    <!--</build>-->


</project>
